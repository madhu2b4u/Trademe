[versions]
agp = "8.7.3"
coilCompose = "2.5.0"
kotlin = "2.0.0"
coreKtx = "1.16.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"

lifecycleRuntimeKtx = "2.9.1"
activityCompose = "1.10.1"
composeBom = "2025.07.00"

retrofit = "2.9.0"
adapterRxjava = "2.9.0"
loggingInterceptor = "5.0.0-alpha.2"
retrofit2KotlinCoroutinesAdapter = "0.9.2"

hiltAndroidCompiler = "2.49"
hiltAndroidTesting = "2.44"
hilt = "2.48.1"
hiltCompiler = "2.48.1"
hiltNavigationCompose = "1.2.0"

room = "2.6.1"

mockk = "1.12.0"
coreTesting = "2.2.0"
mockitoCore = "4.2.0"
truth = "1.1.3"
robolectric = "4.7.3"
junitKtx = "1.2.1"
kotlinxCoroutinesTest = "1.6.4"

kotlinCompilerExtensionVersion = "1.5.15"
compileSdk = "35"
minSdk = "24"
jvmTarget = "11"
versionCode = "1"
versionName = "1.0"
material = "1.13.0"
espressoCoreVersion = "3.7.0"
appcompat = "1.7.1"
materialVersion = "1.13.0"
material3Android = "1.3.2"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltCompiler" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroidCompiler" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroidCompiler" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hiltAndroidTesting" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# Room Database
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "room" }

# Networking
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "adapterRxjava" }
adapter-rxjava = { module = "com.squareup.retrofit2:adapter-rxjava", version.ref = "adapterRxjava" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
retrofit2-kotlin-coroutines-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version.ref = "retrofit2KotlinCoroutinesAdapter" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCoreVersion" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "materialVersion" }

[bundles]

androidx-core = [
    "androidx-core-ktx",
    "androidx-lifecycle-runtime-ktx",
    "androidx-activity-compose"
]

# AndroidX UI components for Compose
androidx-compose-ui = [
    "androidx-ui",
    "androidx-ui-graphics",
    "androidx-ui-tooling",
    "androidx-ui-tooling-preview",
    "androidx-ui-test-manifest",
    "androidx-ui-test-junit4",
    "androidx-material3",
    "androidx-material-icons-extended"
]
# Hilt-related dependencies
hilt = [
    "hilt-android",
    "hilt-android-compiler",
    "hilt-android-testing",
    "androidx-hilt-navigation-compose"
]

# Retrofit and Gson for networking
networking = [
    "retrofit",
    "converter-gson",
    "adapter-rxjava",
    "logging-interceptor",
    "retrofit2-kotlin-coroutines-adapter"
]

# Testing Libraries
testing = [
    "junit",
    "androidx-junit",
    "androidx-junit-ktx",
    "kotlinx-coroutines-test",
    "mockito-core",
    "mockk",
    "truth",
    "robolectric",
    "androidx-core-testing"
]

# Room Database
room = [
    "androidx-room-runtime",
    "androidx-room-ktx"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }